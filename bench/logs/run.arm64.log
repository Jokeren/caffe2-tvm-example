depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 64, 14, 14], filter_shape: [64, 64, 3, 3] -> 0.0066284582
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 128, 14, 14], filter_shape: [128, 128, 3, 3] -> 0.0106263854
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 256, 14, 14], filter_shape: [256, 256, 3, 3] -> 0.0393009688
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 512, 14, 14], filter_shape: [512, 512, 3, 3] -> 0.1576564896
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 64, 26, 26], filter_shape: [64, 64, 3, 3] -> 0.0104964062
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 128, 26, 26], filter_shape: [128, 128, 3, 3] -> 0.0419741042
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 256, 26, 26], filter_shape: [256, 256, 3, 3] -> 0.1591393542
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 512, 26, 26], filter_shape: [512, 512, 3, 3] -> 0.6316002288
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 64, 52, 52], filter_shape: [64, 64, 3, 3] -> 0.0437579894
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 128, 52, 52], filter_shape: [128, 128, 3, 3] -> 0.1720463852
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 256, 52, 52], filter_shape: [256, 256, 3, 3] -> run skip
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 512, 52, 52], filter_shape: [512, 512, 3, 3] -> run skip
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 64, 104, 104], filter_shape: [64, 64, 3, 3] -> run skip
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 128, 104, 104], filter_shape: [128, 128, 3, 3] -> run skip
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 256, 104, 104], filter_shape: [256, 256, 3, 3] -> run skip
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 512, 104, 104], filter_shape: [512, 512, 3, 3] -> run skip
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 14, 14, 64], filter_shape: [3, 3, 64, 64] -> 0.0102131562
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 14, 14, 128], filter_shape: [3, 3, 128, 128] -> 0.0332677084
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 14, 14, 256], filter_shape: [3, 3, 256, 256] -> 0.1322043748
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 14, 14, 512], filter_shape: [3, 3, 512, 512] -> 0.5351098956
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 26, 26, 64], filter_shape: [3, 3, 64, 64] -> 0.0360245834
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 26, 26, 128], filter_shape: [3, 3, 128, 128] -> 0.124262
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 26, 26, 256], filter_shape: [3, 3, 256, 256] -> 0.5282767186
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 26, 26, 512], filter_shape: [3, 3, 512, 512] -> 2.1446026452
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 52, 52, 64], filter_shape: [3, 3, 64, 64] -> 0.1356300416
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 52, 52, 128], filter_shape: [3, 3, 128, 128] -> 0.5795586874
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 52, 52, 256], filter_shape: [3, 3, 256, 256] -> 2.2852279262
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 52, 52, 512], filter_shape: [3, 3, 512, 512] -> run skip
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 104, 104, 64], filter_shape: [3, 3, 64, 64] -> run skip
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 104, 104, 128], filter_shape: [3, 3, 128, 128] -> run skip
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 104, 104, 256], filter_shape: [3, 3, 256, 256] -> run skip
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 104, 104, 512], filter_shape: [3, 3, 512, 512] -> run skip
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [14, 14, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [14, 14, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [14, 14, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [14, 14, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [26, 26, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [26, 26, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [26, 26, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [26, 26, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [52, 52, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [52, 52, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [52, 52, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [52, 52, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [104, 104, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [104, 104, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [104, 104, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [104, 104, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
[14:12:18] /Users/kerenzhou/Codes/tvm/src/runtime/opencl/opencl_device_api.cc:242: Initialize OpenCL platform 'Apple'
[14:12:18] /Users/kerenzhou/Codes/tvm/src/runtime/opencl/opencl_device_api.cc:251: No OpenCL device any device matched given the options: accelerator mode
[14:12:18] /Users/kerenzhou/Codes/tvm/src/runtime/opencl/opencl_device_api.cc:269: opencl(0)='Intel(R) HD Graphics 630' cl_device_id=0x1024500
[14:12:19] /Users/kerenzhou/Codes/tvm/src/runtime/opencl/opencl_device_api.cc:269: opencl(1)='AMD Radeon Pro 555 Compute Engine' cl_device_id=0x1021c00
depthwise--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 64, 14, 14], filter_shape: [64, 64, 3, 3] -> 0.0444276978
depthwise--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 128, 14, 14], filter_shape: [128, 128, 3, 3] -> 0.1148453438
depthwise--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 256, 14, 14], filter_shape: [256, 256, 3, 3] -> 0.3293898644
depthwise--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 512, 14, 14], filter_shape: [512, 512, 3, 3] -> run skip
depthwise--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 64, 26, 26], filter_shape: [64, 64, 3, 3] -> 0.0416313438
depthwise--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 128, 26, 26], filter_shape: [128, 128, 3, 3] -> run skip
depthwise--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 256, 26, 26], filter_shape: [256, 256, 3, 3] -> run skip
depthwise--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 512, 26, 26], filter_shape: [512, 512, 3, 3] -> run skip
depthwise--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 64, 52, 52], filter_shape: [64, 64, 3, 3] -> 0.524471229
depthwise--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 128, 52, 52], filter_shape: [128, 128, 3, 3] -> run skip
depthwise--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 256, 52, 52], filter_shape: [256, 256, 3, 3] -> run skip
depthwise--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 512, 52, 52], filter_shape: [512, 512, 3, 3] -> run skip
depthwise--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 64, 104, 104], filter_shape: [64, 64, 3, 3] -> run skip
depthwise--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 128, 104, 104], filter_shape: [128, 128, 3, 3] -> run skip
depthwise--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 256, 104, 104], filter_shape: [256, 256, 3, 3] -> run skip
depthwise--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 512, 104, 104], filter_shape: [512, 512, 3, 3] -> run skip
depthwise--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 14, 14, 64], filter_shape: [3, 3, 64, 64] -> run skip
depthwise--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 14, 14, 128], filter_shape: [3, 3, 128, 128] -> 0.0036366458
depthwise--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 14, 14, 256], filter_shape: [3, 3, 256, 256] -> 0.0117266562
depthwise--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 14, 14, 512], filter_shape: [3, 3, 512, 512] -> failed
depthwise--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 26, 26, 64], filter_shape: [3, 3, 64, 64] -> 0.0038700312
depthwise--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 26, 26, 128], filter_shape: [3, 3, 128, 128] -> 0.0149650208
depthwise--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 26, 26, 256], filter_shape: [3, 3, 256, 256] -> 0.0498118644
depthwise--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 26, 26, 512], filter_shape: [3, 3, 512, 512] -> run skip
depthwise--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 52, 52, 64], filter_shape: [3, 3, 64, 64] -> 0.0163500832
depthwise--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 52, 52, 128], filter_shape: [3, 3, 128, 128] -> 0.0641843438
depthwise--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 52, 52, 256], filter_shape: [3, 3, 256, 256] -> run skip
depthwise--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 52, 52, 512], filter_shape: [3, 3, 512, 512] -> run skip
depthwise--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 104, 104, 64], filter_shape: [3, 3, 64, 64] -> 0.0681875938
depthwise--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 104, 104, 128], filter_shape: [3, 3, 128, 128] -> run skip
depthwise--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 104, 104, 256], filter_shape: [3, 3, 256, 256] -> run skip
depthwise--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 104, 104, 512], filter_shape: [3, 3, 512, 512] -> run skip
depthwise--target: opencl, dtype: float32, layout: HWCN, input_shape: [14, 14, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
depthwise--target: opencl, dtype: float32, layout: HWCN, input_shape: [14, 14, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
depthwise--target: opencl, dtype: float32, layout: HWCN, input_shape: [14, 14, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
depthwise--target: opencl, dtype: float32, layout: HWCN, input_shape: [14, 14, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
depthwise--target: opencl, dtype: float32, layout: HWCN, input_shape: [26, 26, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
depthwise--target: opencl, dtype: float32, layout: HWCN, input_shape: [26, 26, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
depthwise--target: opencl, dtype: float32, layout: HWCN, input_shape: [26, 26, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
depthwise--target: opencl, dtype: float32, layout: HWCN, input_shape: [26, 26, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
depthwise--target: opencl, dtype: float32, layout: HWCN, input_shape: [52, 52, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
depthwise--target: opencl, dtype: float32, layout: HWCN, input_shape: [52, 52, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
depthwise--target: opencl, dtype: float32, layout: HWCN, input_shape: [52, 52, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
depthwise--target: opencl, dtype: float32, layout: HWCN, input_shape: [52, 52, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
depthwise--target: opencl, dtype: float32, layout: HWCN, input_shape: [104, 104, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
depthwise--target: opencl, dtype: float32, layout: HWCN, input_shape: [104, 104, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
depthwise--target: opencl, dtype: float32, layout: HWCN, input_shape: [104, 104, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
depthwise--target: opencl, dtype: float32, layout: HWCN, input_shape: [104, 104, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 64, 14, 14], filter_shape: [64, 64, 3, 3] -> 0.0052741354
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 128, 14, 14], filter_shape: [128, 128, 3, 3] -> 0.011585625
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 256, 14, 14], filter_shape: [256, 256, 3, 3] -> 0.042763875
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 512, 14, 14], filter_shape: [512, 512, 3, 3] -> 0.1595102084
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 64, 26, 26], filter_shape: [64, 64, 3, 3] -> 0.0139084064
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 128, 26, 26], filter_shape: [128, 128, 3, 3] -> 0.0421873438
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 256, 26, 26], filter_shape: [256, 256, 3, 3] -> 0.160250052
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 512, 26, 26], filter_shape: [512, 512, 3, 3] -> 0.6758625414
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 64, 52, 52], filter_shape: [64, 64, 3, 3] -> 0.043604625
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 128, 52, 52], filter_shape: [128, 128, 3, 3] -> 0.1669986978
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 256, 52, 52], filter_shape: [256, 256, 3, 3] -> 0.666285385
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 512, 52, 52], filter_shape: [512, 512, 3, 3] -> 2.6118444574
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 64, 104, 104], filter_shape: [64, 64, 3, 3] -> 0.1675165936
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 128, 104, 104], filter_shape: [128, 128, 3, 3] -> 0.6680647914
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 256, 104, 104], filter_shape: [256, 256, 3, 3] -> 2.6762933114
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 512, 104, 104], filter_shape: [512, 512, 3, 3] -> run skip
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 14, 14, 64], filter_shape: [3, 3, 64, 64] -> 0.0101823438
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 14, 14, 128], filter_shape: [3, 3, 128, 128] -> 0.0355683334
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 14, 14, 256], filter_shape: [3, 3, 256, 256] -> 0.1386363958
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 14, 14, 512], filter_shape: [3, 3, 512, 512] -> 0.5579646248
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 26, 26, 64], filter_shape: [3, 3, 64, 64] -> 0.0276007708
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 26, 26, 128], filter_shape: [3, 3, 128, 128] -> 0.1518062188
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 26, 26, 256], filter_shape: [3, 3, 256, 256] -> 0.535607354
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 26, 26, 512], filter_shape: [3, 3, 512, 512] -> 2.2348213324
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 52, 52, 64], filter_shape: [3, 3, 64, 64] -> 0.1221537708
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 52, 52, 128], filter_shape: [3, 3, 128, 128] -> 0.5984913434
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 52, 52, 256], filter_shape: [3, 3, 256, 256] -> 2.3288273846
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 52, 52, 512], filter_shape: [3, 3, 512, 512] -> 9.696129163
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 104, 104, 64], filter_shape: [3, 3, 64, 64] -> 0.4742729062
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 104, 104, 128], filter_shape: [3, 3, 128, 128] -> 2.4908024054
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 104, 104, 256], filter_shape: [3, 3, 256, 256] -> 9.7047836004
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 104, 104, 512], filter_shape: [3, 3, 512, 512] -> run skip
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [14, 14, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [14, 14, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [14, 14, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [14, 14, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [26, 26, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [26, 26, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [26, 26, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [26, 26, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [52, 52, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [52, 52, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [52, 52, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [52, 52, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [104, 104, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [104, 104, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [104, 104, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
depthwise--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [104, 104, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
[13:47:02] /Users/kerenzhou/Codes/tvm/src/runtime/opencl/opencl_device_api.cc:242: Initialize OpenCL platform 'Apple'
[13:47:02] /Users/kerenzhou/Codes/tvm/src/runtime/opencl/opencl_device_api.cc:251: No OpenCL device any device matched given the options: accelerator mode
[13:47:02] /Users/kerenzhou/Codes/tvm/src/runtime/opencl/opencl_device_api.cc:269: opencl(0)='Intel(R) HD Graphics 630' cl_device_id=0x1024500
[13:47:02] /Users/kerenzhou/Codes/tvm/src/runtime/opencl/opencl_device_api.cc:269: opencl(1)='AMD Radeon Pro 555 Compute Engine' cl_device_id=0x1021c00
depthwise--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 64, 14, 14], filter_shape: [64, 64, 3, 3] -> 0.0473162292
depthwise--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 128, 14, 14], filter_shape: [128, 128, 3, 3] -> 0.2680423228
depthwise--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 256, 14, 14], filter_shape: [256, 256, 3, 3] -> 0.5974959892
depthwise--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 512, 14, 14], filter_shape: [512, 512, 3, 3] -> 1.9597335826
depthwise--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 64, 26, 26], filter_shape: [64, 64, 3, 3] -> 0.0215560834
depthwise--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 128, 26, 26], filter_shape: [128, 128, 3, 3] -> 0.0891693646
depthwise--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 256, 26, 26], filter_shape: [256, 256, 3, 3] -> 0.4343244582
depthwise--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 128, 52, 52], filter_shape: [128, 128, 3, 3] -> 2.6070976136
depthwise--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 256, 52, 52], filter_shape: [256, 256, 3, 3] -> run skip
depthwise--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 512, 52, 52], filter_shape: [512, 512, 3, 3] -> run skip
depthwise--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 64, 104, 104], filter_shape: [64, 64, 3, 3] -> run skip
depthwise--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 128, 104, 104], filter_shape: [128, 128, 3, 3] -> run skip
depthwise--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 256, 104, 104], filter_shape: [256, 256, 3, 3] -> run skip
depthwise--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 512, 104, 104], filter_shape: [512, 512, 3, 3] -> run skip
depthwise--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 14, 14, 64], filter_shape: [3, 3, 64, 64] -> 0.0008495832
depthwise--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 14, 14, 128], filter_shape: [3, 3, 128, 128] -> 0.0030305938
depthwise--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 14, 14, 256], filter_shape: [3, 3, 256, 256] -> 0.0099793436
depthwise--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 14, 14, 512], filter_shape: [3, 3, 512, 512] -> failed
depthwise--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 26, 26, 64], filter_shape: [3, 3, 64, 64] -> 0.0031167812
depthwise--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 26, 26, 128], filter_shape: [3, 3, 128, 128] -> 0.0123546354
depthwise--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 26, 26, 256], filter_shape: [3, 3, 256, 256] -> 0.0444762708
depthwise--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 26, 26, 512], filter_shape: [3, 3, 512, 512] -> failed
depthwise--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 52, 52, 64], filter_shape: [3, 3, 64, 64] -> 0.0145789374
depthwise--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 52, 52, 128], filter_shape: [3, 3, 128, 128] -> 0.058144521
depthwise--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 52, 52, 256], filter_shape: [3, 3, 256, 256] -> 0.190697177
depthwise--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 52, 52, 512], filter_shape: [3, 3, 512, 512] -> run skip
depthwise--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 104, 104, 64], filter_shape: [3, 3, 64, 64] -> 0.0611397186
depthwise--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 104, 104, 128], filter_shape: [3, 3, 128, 128] -> 0.2514837394
depthwise--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 104, 104, 256], filter_shape: [3, 3, 256, 256] -> run skip
depthwise--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 104, 104, 512], filter_shape: [3, 3, 512, 512] -> run skip
depthwise--target: opencl, dtype: int8, layout: HWCN, input_shape: [14, 14, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
depthwise--target: opencl, dtype: int8, layout: HWCN, input_shape: [14, 14, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
depthwise--target: opencl, dtype: int8, layout: HWCN, input_shape: [14, 14, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
depthwise--target: opencl, dtype: int8, layout: HWCN, input_shape: [14, 14, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
depthwise--target: opencl, dtype: int8, layout: HWCN, input_shape: [26, 26, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
depthwise--target: opencl, dtype: int8, layout: HWCN, input_shape: [26, 26, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
depthwise--target: opencl, dtype: int8, layout: HWCN, input_shape: [26, 26, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
depthwise--target: opencl, dtype: int8, layout: HWCN, input_shape: [26, 26, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
depthwise--target: opencl, dtype: int8, layout: HWCN, input_shape: [52, 52, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
depthwise--target: opencl, dtype: int8, layout: HWCN, input_shape: [52, 52, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
depthwise--target: opencl, dtype: int8, layout: HWCN, input_shape: [52, 52, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
depthwise--target: opencl, dtype: int8, layout: HWCN, input_shape: [52, 52, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
depthwise--target: opencl, dtype: int8, layout: HWCN, input_shape: [104, 104, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
depthwise--target: opencl, dtype: int8, layout: HWCN, input_shape: [104, 104, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
depthwise--target: opencl, dtype: int8, layout: HWCN, input_shape: [104, 104, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
depthwise--target: opencl, dtype: int8, layout: HWCN, input_shape: [104, 104, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
[14:38:44] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:38:44] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 64, 14, 14], filter_shape: [64, 64, 3, 3] -> 0.0029692604
[14:38:45] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:38:45] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 128, 14, 14], filter_shape: [128, 128, 3, 3] -> 0.0113490312
[14:38:47] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:38:47] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 256, 14, 14], filter_shape: [256, 256, 3, 3] -> 0.046877823
[14:38:49] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:38:49] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 512, 14, 14], filter_shape: [512, 512, 3, 3] -> 0.1993917602
[14:38:52] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:38:52] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 64, 26, 26], filter_shape: [64, 64, 3, 3] -> 0.0176989584
[14:38:53] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:38:53] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 128, 26, 26], filter_shape: [128, 128, 3, 3] -> 0.0749698644
[14:38:55] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:38:55] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 256, 26, 26], filter_shape: [256, 256, 3, 3] -> 0.309848625
[14:39:00] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:39:00] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 512, 26, 26], filter_shape: [512, 512, 3, 3] -> 1.1635036454
[14:39:09] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:39:09] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 64, 52, 52], filter_shape: [64, 64, 3, 3] -> 0.0772807188
[14:39:11] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:39:11] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 128, 52, 52], filter_shape: [128, 128, 3, 3] -> 0.3370592186
[14:39:16] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:39:16] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 256, 52, 52], filter_shape: [256, 256, 3, 3] -> 1.2929818536
[14:39:29] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:39:29] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 512, 52, 52], filter_shape: [512, 512, 3, 3] -> 3.8177277798
[14:39:58] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:39:58] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 64, 104, 104], filter_shape: [64, 64, 3, 3] -> 0.3357525936
[14:40:03] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:40:03] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 128, 104, 104], filter_shape: [128, 128, 3, 3] -> 1.1803516454
[14:40:16] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:40:16] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 256, 104, 104], filter_shape: [256, 256, 3, 3] -> 3.8016628526
[14:40:54] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:40:54] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NCHW, input_shape: [1, 512, 104, 104], filter_shape: [512, 512, 3, 3] -> 12.1669202348
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 14, 14, 64], filter_shape: [3, 3, 64, 64] -> 0.0005937918
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 14, 14, 128], filter_shape: [3, 3, 128, 128] -> 0.0025719062
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 14, 14, 256], filter_shape: [3, 3, 256, 256] -> 0.0160566458
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 14, 14, 512], filter_shape: [3, 3, 512, 512] -> 0.0661190728
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 26, 26, 64], filter_shape: [3, 3, 64, 64] -> 0.0019761458
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 26, 26, 128], filter_shape: [3, 3, 128, 128] -> 0.015449354
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 26, 26, 256], filter_shape: [3, 3, 256, 256] -> 0.0725217186
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 26, 26, 512], filter_shape: [3, 3, 512, 512] -> 0.2582273542
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 52, 52, 64], filter_shape: [3, 3, 64, 64] -> 0.0106733124
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 52, 52, 128], filter_shape: [3, 3, 128, 128] -> 0.0506645
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 52, 52, 256], filter_shape: [3, 3, 256, 256] -> 0.2519673958
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 52, 52, 512], filter_shape: [3, 3, 512, 512] -> 1.1060958642
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 104, 104, 64], filter_shape: [3, 3, 64, 64] -> 0.0332581146
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 104, 104, 128], filter_shape: [3, 3, 128, 128] -> 0.1931862604
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 104, 104, 256], filter_shape: [3, 3, 256, 256] -> 0.9633988538
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: NHWC, input_shape: [1, 104, 104, 512], filter_shape: [3, 3, 512, 512] -> 4.562987571
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [14, 14, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [14, 14, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [14, 14, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [14, 14, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [26, 26, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [26, 26, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [26, 26, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [26, 26, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [52, 52, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [52, 52, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [52, 52, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [52, 52, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [104, 104, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [104, 104, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [104, 104, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: float32, layout: HWCN, input_shape: [104, 104, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
[14:43:54] /Users/kerenzhou/Codes/tvm/src/runtime/opencl/opencl_device_api.cc:242: Initialize OpenCL platform 'Apple'
[14:43:54] /Users/kerenzhou/Codes/tvm/src/runtime/opencl/opencl_device_api.cc:251: No OpenCL device any device matched given the options: accelerator mode
[14:43:54] /Users/kerenzhou/Codes/tvm/src/runtime/opencl/opencl_device_api.cc:269: opencl(0)='Intel(R) HD Graphics 630' cl_device_id=0x1024500
[14:43:55] /Users/kerenzhou/Codes/tvm/src/runtime/opencl/opencl_device_api.cc:269: opencl(1)='AMD Radeon Pro 555 Compute Engine' cl_device_id=0x1021c00
standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 64, 14, 14], filter_shape: [64, 64, 3, 3] -> 0.0039989688
standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 128, 14, 14], filter_shape: [128, 128, 3, 3] -> 0.00393725
standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 256, 14, 14], filter_shape: [256, 256, 3, 3] -> 0.0232228646
standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 512, 14, 14], filter_shape: [512, 512, 3, 3] -> 0.0647339792
standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 64, 26, 26], filter_shape: [64, 64, 3, 3] -> 0.0092738438
standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 128, 26, 26], filter_shape: [128, 128, 3, 3] -> failed
standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 256, 26, 26], filter_shape: [256, 256, 3, 3] -> 0.074261427
^Cstandard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 512, 26, 26], filter_shape: [512, 512, 3, 3] -> run skip

standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 64, 52, 52], filter_shape: [64, 64, 3, 3] -> run skip
standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 128, 52, 52], filter_shape: [128, 128, 3, 3] -> run skip
standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 256, 52, 52], filter_shape: [256, 256, 3, 3] -> run skip
standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 512, 52, 52], filter_shape: [512, 512, 3, 3] -> run skip
standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 64, 104, 104], filter_shape: [64, 64, 3, 3] -> run skip
standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 128, 104, 104], filter_shape: [128, 128, 3, 3] -> run skip
standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 256, 104, 104], filter_shape: [256, 256, 3, 3] -> run skip
standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 512, 104, 104], filter_shape: [512, 512, 3, 3] -> run skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 14, 14, 64], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 14, 14, 128], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 14, 14, 256], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 14, 14, 512], filter_shape: [3, 3, 512, 512] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 26, 26, 64], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 26, 26, 128], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 26, 26, 256], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 26, 26, 512], filter_shape: [3, 3, 512, 512] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 52, 52, 64], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 52, 52, 128], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 52, 52, 256], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 52, 52, 512], filter_shape: [3, 3, 512, 512] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 104, 104, 64], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 104, 104, 128], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 104, 104, 256], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 104, 104, 512], filter_shape: [3, 3, 512, 512] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [14, 14, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [14, 14, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [14, 14, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [14, 14, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [26, 26, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [26, 26, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [26, 26, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [26, 26, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [52, 52, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [52, 52, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [52, 52, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [52, 52, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [104, 104, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [104, 104, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [104, 104, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [104, 104, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
standard--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 64, 14, 14], filter_shape: [64, 64, 3, 3] -> 0.0061331772
standard--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 128, 14, 14], filter_shape: [128, 128, 3, 3] -> 0.00520475
standard--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 256, 14, 14], filter_shape: [256, 256, 3, 3] -> 0.0757296458
standard--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 512, 14, 14], filter_shape: [512, 512, 3, 3] -> 0.0659951042
standard--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 64, 26, 26], filter_shape: [64, 64, 3, 3] -> 0.0141579792
standard--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 128, 26, 26], filter_shape: [128, 128, 3, 3] -> failed
standard--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 256, 26, 26], filter_shape: [256, 256, 3, 3] -> 0.258072177
^Cstandard--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 512, 26, 26], filter_shape: [512, 512, 3, 3] -> run skip
standard--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 64, 52, 52], filter_shape: [64, 64, 3, 3] -> run skip
standard--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 128, 52, 52], filter_shape: [128, 128, 3, 3] -> run skip
standard--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 256, 52, 52], filter_shape: [256, 256, 3, 3] -> run skip
standard--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 512, 52, 52], filter_shape: [512, 512, 3, 3] -> run skip
standard--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 64, 104, 104], filter_shape: [64, 64, 3, 3] -> run skip
standard--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 128, 104, 104], filter_shape: [128, 128, 3, 3] -> run skip
standard--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 256, 104, 104], filter_shape: [256, 256, 3, 3] -> run skip
standard--target: opencl, dtype: float32, layout: NCHW, input_shape: [1, 512, 104, 104], filter_shape: [512, 512, 3, 3] -> run skip
standard--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 14, 14, 64], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 14, 14, 128], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 14, 14, 256], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 14, 14, 512], filter_shape: [3, 3, 512, 512] -> schedule skip
standard--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 26, 26, 64], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 26, 26, 128], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 26, 26, 256], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 26, 26, 512], filter_shape: [3, 3, 512, 512] -> schedule skip
standard--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 52, 52, 64], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 52, 52, 128], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 52, 52, 256], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 52, 52, 512], filter_shape: [3, 3, 512, 512] -> schedule skip
standard--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 104, 104, 64], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 104, 104, 128], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 104, 104, 256], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: opencl, dtype: float32, layout: NHWC, input_shape: [1, 104, 104, 512], filter_shape: [3, 3, 512, 512] -> schedule skip
standard--target: opencl, dtype: float32, layout: HWCN, input_shape: [14, 14, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: opencl, dtype: float32, layout: HWCN, input_shape: [14, 14, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: opencl, dtype: float32, layout: HWCN, input_shape: [14, 14, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: opencl, dtype: float32, layout: HWCN, input_shape: [14, 14, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
standard--target: opencl, dtype: float32, layout: HWCN, input_shape: [26, 26, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: opencl, dtype: float32, layout: HWCN, input_shape: [26, 26, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: opencl, dtype: float32, layout: HWCN, input_shape: [26, 26, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: opencl, dtype: float32, layout: HWCN, input_shape: [26, 26, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
standard--target: opencl, dtype: float32, layout: HWCN, input_shape: [52, 52, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: opencl, dtype: float32, layout: HWCN, input_shape: [52, 52, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: opencl, dtype: float32, layout: HWCN, input_shape: [52, 52, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: opencl, dtype: float32, layout: HWCN, input_shape: [52, 52, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
standard--target: opencl, dtype: float32, layout: HWCN, input_shape: [104, 104, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: opencl, dtype: float32, layout: HWCN, input_shape: [104, 104, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: opencl, dtype: float32, layout: HWCN, input_shape: [104, 104, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: opencl, dtype: float32, layout: HWCN, input_shape: [104, 104, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
[14:35:11] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:35:11] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 64, 14, 14], filter_shape: [64, 64, 3, 3] -> 0.00262725
[14:35:12] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:35:12] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 128, 14, 14], filter_shape: [128, 128, 3, 3] -> 0.0088628958
[14:35:13] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:35:13] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 256, 14, 14], filter_shape: [256, 256, 3, 3] -> 0.0367299584
 q[14:35:14] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:35:14] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
 qstandard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 512, 14, 14], filter_shape: [512, 512, 3, 3] -> 0.189816552
[14:35:16] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:35:16] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 64, 26, 26], filter_shape: [64, 64, 3, 3] -> 0.0147189896
[14:35:17] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:35:17] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 128, 26, 26], filter_shape: [128, 128, 3, 3] -> 0.056038302
[14:35:19] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:35:19] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 256, 26, 26], filter_shape: [256, 256, 3, 3] -> 0.2490160832
[14:35:22] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:35:22] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 512, 26, 26], filter_shape: [512, 512, 3, 3] -> 0.9625101976
[14:35:29] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:35:29] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 64, 52, 52], filter_shape: [64, 64, 3, 3] -> 0.0677913958
[14:35:31] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:35:31] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 128, 52, 52], filter_shape: [128, 128, 3, 3] -> 0.2889333956
[14:35:35] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:35:35] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 256, 52, 52], filter_shape: [256, 256, 3, 3] -> 1.0862557912
[14:35:45] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:35:45] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 512, 52, 52], filter_shape: [512, 512, 3, 3] -> 3.4471544882
[14:36:10] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:36:10] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 64, 104, 104], filter_shape: [64, 64, 3, 3] -> 0.2763295728
[14:36:14] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:36:14] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 128, 104, 104], filter_shape: [128, 128, 3, 3] -> 1.0954060308
[14:36:24] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:36:24] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 256, 104, 104], filter_shape: [256, 256, 3, 3] -> 3.2037233426
[14:36:51] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
[14:36:51] /Users/kerenzhou/Codes/tvm/src/pass/vectorize_loop.cc:303: Detect vector condition in Vectorized Loop, scalarizing...
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NCHW, input_shape: [1, 512, 104, 104], filter_shape: [512, 512, 3, 3] -> 11.2221284854
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 14, 14, 64], filter_shape: [3, 3, 64, 64] -> 0.0002138646
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 14, 14, 128], filter_shape: [3, 3, 128, 128] -> 0.0004423646
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 14, 14, 256], filter_shape: [3, 3, 256, 256] -> 0.0026240728
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 14, 14, 512], filter_shape: [3, 3, 512, 512] -> 0.0111254792
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 26, 26, 64], filter_shape: [3, 3, 64, 64] -> 0.000442698
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 26, 26, 128], filter_shape: [3, 3, 128, 128] -> 0.0019278436
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 26, 26, 256], filter_shape: [3, 3, 256, 256] -> 0.0099883022
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 26, 26, 512], filter_shape: [3, 3, 512, 512] -> 0.0438577082
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 52, 52, 64], filter_shape: [3, 3, 64, 64] -> 0.0018702604
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 52, 52, 128], filter_shape: [3, 3, 128, 128] -> 0.007558625
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 52, 52, 256], filter_shape: [3, 3, 256, 256] -> 0.0379804376
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 52, 52, 512], filter_shape: [3, 3, 512, 512] -> 0.1975254896
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 104, 104, 64], filter_shape: [3, 3, 64, 64] -> 0.0081964376
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 104, 104, 128], filter_shape: [3, 3, 128, 128] -> 0.0299892292
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 104, 104, 256], filter_shape: [3, 3, 256, 256] -> 0.1565829582
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: NHWC, input_shape: [1, 104, 104, 512], filter_shape: [3, 3, 512, 512] -> 0.7740190518
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [14, 14, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [14, 14, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [14, 14, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [14, 14, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [26, 26, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [26, 26, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [26, 26, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [26, 26, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [52, 52, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [52, 52, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [52, 52, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [52, 52, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [104, 104, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [104, 104, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [104, 104, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: llvm -target=arm64-linux-android, dtype: int8, layout: HWCN, input_shape: [104, 104, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 64, 14, 14], filter_shape: [64, 64, 3, 3] -> 0.0039989688
standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 128, 14, 14], filter_shape: [128, 128, 3, 3] -> 0.00393725
standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 256, 14, 14], filter_shape: [256, 256, 3, 3] -> 0.0232228646
standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 512, 14, 14], filter_shape: [512, 512, 3, 3] -> 0.0647339792
standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 64, 26, 26], filter_shape: [64, 64, 3, 3] -> 0.0092738438
standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 128, 26, 26], filter_shape: [128, 128, 3, 3] -> failed
standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 256, 26, 26], filter_shape: [256, 256, 3, 3] -> 0.074261427
^Cstandard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 512, 26, 26], filter_shape: [512, 512, 3, 3] -> run skip
standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 64, 52, 52], filter_shape: [64, 64, 3, 3] -> run skip
standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 128, 52, 52], filter_shape: [128, 128, 3, 3] -> run skip
standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 256, 52, 52], filter_shape: [256, 256, 3, 3] -> run skip
standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 512, 52, 52], filter_shape: [512, 512, 3, 3] -> run skip
standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 64, 104, 104], filter_shape: [64, 64, 3, 3] -> run skip
standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 128, 104, 104], filter_shape: [128, 128, 3, 3] -> run skip
standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 256, 104, 104], filter_shape: [256, 256, 3, 3] -> run skip
standard--target: opencl, dtype: int8, layout: NCHW, input_shape: [1, 512, 104, 104], filter_shape: [512, 512, 3, 3] -> run skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 14, 14, 64], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 14, 14, 128], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 14, 14, 256], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 14, 14, 512], filter_shape: [3, 3, 512, 512] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 26, 26, 64], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 26, 26, 128], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 26, 26, 256], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 26, 26, 512], filter_shape: [3, 3, 512, 512] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 52, 52, 64], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 52, 52, 128], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 52, 52, 256], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 52, 52, 512], filter_shape: [3, 3, 512, 512] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 104, 104, 64], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 104, 104, 128], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 104, 104, 256], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: opencl, dtype: int8, layout: NHWC, input_shape: [1, 104, 104, 512], filter_shape: [3, 3, 512, 512] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [14, 14, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [14, 14, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [14, 14, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [14, 14, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [26, 26, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [26, 26, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [26, 26, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [26, 26, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [52, 52, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [52, 52, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [52, 52, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [52, 52, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [104, 104, 64, 1], filter_shape: [3, 3, 64, 64] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [104, 104, 128, 1], filter_shape: [3, 3, 128, 128] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [104, 104, 256, 1], filter_shape: [3, 3, 256, 256] -> schedule skip
standard--target: opencl, dtype: int8, layout: HWCN, input_shape: [104, 104, 512, 1], filter_shape: [3, 3, 512, 512] -> schedule skip
